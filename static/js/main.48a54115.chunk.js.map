{"version":3,"sources":["utils.tsx","LinkSections.tsx","config.ts","auth.ts","SearchBar.tsx","Clock.tsx","StaticLinks.tsx","HomeSearch.tsx","TasksBar.tsx","TaskEntry.tsx","TasksList.tsx","HomeTasks.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["partial","f","headArgs","tailArgs","getValidURL","link","test","ls","window","localStorage","useCached","key","defaultValue","useState","cached","getItem","JSON","parse","data","setData","useEffect","setItem","stringify","parseQueryString","queryString","location","search","values","qs","qmarkKey","Object","keys","find","elt","startsWith","tmp","slice","useQueryString","initialValue","getQueryStringValue","value","setValue","useCallback","newValue","parsed","newurl","protocol","host","pathname","length","history","pushState","path","setQueryString","Checkbox","styled","i","attrs","props","className","checked","TrashIcon","useLogin","create","set","loggedIn","setLoggedIn","val","useAddTask","addTask","setAddTask","a","SectionContainer","div","LinksWrapper","Section","title","children","id","Link","LinkSections","query","setAction","sites","setSites","sections","setSections","selected","setSelected","totalMatched","setTotalMatched","fetch","then","res","json","catch","err","console","error","document","documentElement","style","setProperty","Math","max","map","category","updateSections","newSelected","newSections","pos","matches","forEach","idx","links","filtered","filter","name","toLowerCase","includes","push","isSelected","href","isURL","match","onKeyDown","e","addEventListener","removeEventListener","TASKS_DISCOVERY_DOCS","TASKS_SCOPE","called","useGoogleAPI","clientInit","setClientInit","offlineAccess","setOfflineAccess","gapi","load","updateLoggedInStatus","status","setTimeout","auth2","getAuthInstance","currentUser","get","grantOfflineAccess","scope","prompt","code","client","init","apiKey","clientId","discoveryDocs","isSignedIn","listen","authInstance","signIn","signOut","logIn","logOut","username","getBasicProfile","getGivenName","SearchInput","input","SearchDatePicker","DayPicker","open","SearchBar","text","setText","action","useRef","pickerOpen","setPickerOpen","taskText","setTaskText","updateTitle","start","blurCallback","bind","focusCallback","onSubmit","preventDefault","trim","clear","assign","encodeURIComponent","type","ref","autoFocus","autoComplete","onChange","target","selectedDays","Date","onDayClick","d","due","toISOString","Wrapper","DateSpan","span","TimeSpan","Clock","date","setDate","timer","setInterval","clearInterval","dayjs","format","StaticLinksContainer","StaticLink","StaticLinks","MainContainer","HomeSearch","setQuery","useResizeDetector","height","undefined","parseInt","getComputedStyle","getPropertyValue","TasksBarDiv","TaskListChooserButton","TasksBarText","DropDown","DropDownElement","TasksBar","tasklists","activeList","setActiveList","setOpen","onClick","list","TaskEntryDiv","TaskDescInput","textarea","rows","TaskUIDiv","DueDateDiv","DueIcon","TaskEntry","task","setTask","setChecked","setDeleted","descRef","taskDate","setTaskDate","updateDescHeight","current","scrollHeight","split","getUTCFullYear","getUTCMonth","getUTCDate","placeholder","replace","parseDate","str","locale","isValid","toDate","formatDate","dayPickerProps","inputProps","CompletedTasksDiv","StyledHR","hr","ChevronIcon","expanded","CompletedTasks","tasks","setExpanded","TasksListDiv","NoTasksText","p","TasksList","setTasks","doneTasks","completed","setDoneTasks","setCompleted","activeTaskList","insert","resource","tasklist","statusText","Error","update","$push","result","body","updateTimers","setUpdateTimers","updateTask","setList","listId","taskId","$merge","oldTaskTimer","clearTimeout","newTaskTimer","patch","$unset","deleteTask","delete","$splice","toggleCompleted","src","setSrc","dest","setDest","oldTask","newSrc","newDest","TasksMainDiv","HomeTasks","setTaskLists","sort","b","getTime","position","localeCompare","items","showCompleted","maxResults","App","min","floor","random","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.48a54115.chunk.js","sourcesContent":["import {\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport qs from 'querystring';\nimport create from 'zustand';\nimport { Task } from './config';\nimport styled from 'styled-components';\n\ntype Arr = readonly unknown[];\nexport function partial<T extends Arr, U extends Arr, R>(\n  f: (...args: [...T, ...U]) => R,\n  ...headArgs: T\n) {\n  return (...tailArgs: U) => f(...headArgs, ...tailArgs);\n}\n\nexport function getValidURL(link: string): string {\n  return /^https?:\\/\\//.test(link) ? link : `//${link}`;\n}\n\nconst ls = window.localStorage;\n\nexport function useCached<T>(\n  key: string,\n  defaultValue: T,\n): [T, Dispatch<SetStateAction<T>>] {\n  const [data, setData] = useState<T>(() => {\n    const cached = ls.getItem(key);\n    return cached !== null ? JSON.parse(cached) : defaultValue;\n  });\n\n  useEffect(() => {\n    ls.setItem(key, JSON.stringify(data));\n  }, [data, key]);\n\n  return [data, setData];\n}\n\nfunction parseQueryString(queryString = window.location.search) {\n  const values = qs.parse(queryString);\n\n  // Remove leading qmark from first query param\n  const qmarkKey = Object.keys(values).find((elt) => elt.startsWith('?'));\n  if (qmarkKey) {\n    const tmp = values[qmarkKey];\n    delete values[qmarkKey];\n    values[qmarkKey.slice(1)] = tmp;\n  }\n  return values;\n}\n\nfunction setQueryString(key: string, value: any) {\n  const parsed = parseQueryString();\n  if (key in parsed && !value) delete parsed[key];\n  else parsed[key] = value;\n\n  const newurl =\n    window.location.protocol +\n    '//' +\n    window.location.host +\n    window.location.pathname +\n    `${Object.keys(parsed).length ? '?' : ''}${qs.stringify(parsed)}`;\n\n  window.history.pushState({ path: newurl }, '', newurl);\n}\n\nfunction getQueryStringValue(key: string) {\n  return parseQueryString()[key];\n}\n\nexport function useQueryString(key: string, initialValue: any) {\n  const [value, setValue] = useState(getQueryStringValue(key) || initialValue);\n  const onSetValue = useCallback(\n    (newValue) => {\n      setValue(newValue);\n      setQueryString(key, newValue);\n    },\n    [key],\n  );\n\n  return [value, onSetValue];\n}\n\ntype CheckboxProps = { checked: boolean };\n\nexport const Checkbox = styled.i.attrs<CheckboxProps>((props) => ({\n  className: props.checked ? 'fas fa-check-square' : 'fas fa-square',\n}))<CheckboxProps>`\n  margin: 12px 10px 0px 15px;\n\n  transform: scale(1.35);\n\n  color: var(--frg-l);\n\n  &:hover {\n    color: var(--frg-ll);\n  }\n`;\n\nexport const TrashIcon = styled.i.attrs({ className: 'far fa-trash-alt fa-lg' })`\n  padding: 13px 10px;\n\n  color: var(--frg-l);\n\n  &:hover {\n    color: var(--frg-ll);\n  }\n`;\n\n// Context stuff\n\nexport const useLogin = create<{\n  loggedIn: boolean;\n  setLoggedIn: (val: boolean) => void;\n}>((set) => ({\n  loggedIn: false,\n  setLoggedIn: (val) => set({ loggedIn: val }),\n}));\n\ntype AddTask = (t: Task) => void;\nexport const useAddTask = create<{\n  addTask: AddTask;\n  setAddTask: (a: AddTask) => void;\n}>((set) => ({\n  addTask: () => {},\n  setAddTask: (a) => set({ addTask: a }),\n}));\n","import { useCallback, useEffect, useState } from 'react';\nimport isURL from 'validator/lib/isURL';\nimport { Sites, option, SITES_DATA_URL } from './config';\nimport { getValidURL, useCached } from './utils';\nimport styled from 'styled-components';\n\nconst SectionContainer = styled.div`\n  vertical-align: top;\n\n  display: inline-block;\n\n  overflow: hidden;\n\n  box-sizing: border-box;\n  margin: 2px;\n  height: var(--section-height);\n  width: var(--section-width);\n\n  background-color: var(--hdr);\n\n  text-align: left;\n  color: var(--htx);\n\n  &:before {\n    content: '';\n    margin-left: 5px;\n  }\n`;\n\nconst LinksWrapper = styled.div`\n  padding: 10px 15px 15px 10px;\n\n  height: 100%;\n\n  background-color: var(--frg);\n`;\n\nfunction Section({\n  title,\n  children,\n}: {\n  title: string;\n  children: JSX.Element[];\n}) {\n  return children.length ? (\n    <SectionContainer id={title}>\n      {title}\n      <LinksWrapper>{children}</LinksWrapper>\n    </SectionContainer>\n  ) : (\n    <></>\n  );\n}\n\nconst Link = styled.a`\n  margin-bottom: var(--link-margin);\n  padding-left: 5px;\n\n  display: block;\n\n  color: var(--txt);\n  text-decoration: none;\n\n  &:hover,\n  &.selected {\n    background-color: rgba(255, 255, 255, 0.05);\n\n    color: var(--hgl);\n  }\n`;\n\nexport default function LinkSections({\n  query,\n  setAction,\n}: {\n  query: string;\n  setAction: (s: option<string>) => void;\n}) {\n  const [sites, setSites] = useCached<option<Sites>>('sites', null);\n  const [sections, setSections] = useState<JSX.Element[]>([]);\n  const [selected, setSelected] = useState<option<number>>(null);\n  const [totalMatched, setTotalMatched] = useState(0);\n\n  useEffect(() => {\n    fetch(SITES_DATA_URL)\n      .then((res) => res.json())\n      .then((data) => setSites(data))\n      .catch((err) => console.error(err));\n  }, [setSites]);\n\n  useEffect(() => {\n    if (sites !== null)\n      document.documentElement.style.setProperty(\n        '--max-links',\n        `${Math.max(\n          ...Object.keys(sites).map(\n            (category) => Object.keys(sites[category]).length,\n          ),\n        )}`,\n      );\n  }, [sites]);\n\n  const updateSections = useCallback(\n    function (newSelected: option<number>) {\n      if (sites === null) return;\n\n      const newSections: JSX.Element[] = [];\n      let pos = 0,\n        matches = false;\n      Object.keys(sites).forEach((category, idx) => {\n        const links = sites[category];\n        const filtered = Object.keys(links).filter((name) =>\n          name.toLowerCase().includes(query),\n        );\n\n        if (filtered.length) {\n          matches = true;\n          newSections.push(\n            <Section key={idx} title={category}>\n              {filtered.map((name, idx) => {\n                const isSelected = pos++ === newSelected;\n                if (isSelected) setAction(links[name]);\n\n                return (\n                  <Link\n                    key={idx}\n                    href={getValidURL(links[name])}\n                    className={isSelected ? 'selected' : ''}\n                  >\n                    {name}\n                  </Link>\n                );\n              })}\n            </Section>,\n          );\n        }\n      });\n      setTotalMatched(pos);\n      setSections(newSections);\n      setSelected(newSelected);\n      if (!matches || !query.length) setAction(null);\n    },\n    [query, sites, setAction],\n  );\n\n  useEffect(() => {\n    if (\n      isURL(query) ||\n      /^(https?)?:\\/\\/localhost:\\d{1,5}([^\\d].*)?$/g.test(query)\n    ) {\n      setAction(query);\n      return;\n    }\n    if (\n      query.match(/^lh\\d{3,5}$/) !== null ||\n      query.match(/^localhost:\\d{3,5}$/) !== null\n    ) {\n      setAction(\n        `http://localhost:${(query.match(/\\d{3,5}/) as RegExpMatchArray)[0]}`,\n      );\n      return;\n    }\n    // Assemble list of sections based on query\n    updateSections(query.length ? 0 : null);\n  }, [query, setAction, updateSections]);\n\n  useEffect(() => {\n    function onKeyDown(e: KeyboardEvent) {\n      let newSelected = selected;\n      if (e.key === 'ArrowUp' || e.key === 'ArrowLeft') {\n        if (selected !== null && selected > 0) newSelected = selected - 1;\n      } else if (e.key === 'ArrowDown' || e.key === 'ArrowRight') {\n        if (selected !== null && selected < totalMatched)\n          newSelected = selected + 1;\n      }\n      if (newSelected !== selected) updateSections(newSelected);\n    }\n    document.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', onKeyDown);\n    };\n  }, [selected, totalMatched, updateSections]);\n\n  return <div id=\"links\">{sections}</div>;\n}\n","export const PAGE_HUE_MIN = 10;\nexport const PAGE_HUE_MAX = 360;\n\nexport const DEFAULT_TAB_TITLE = '🏠 Home';\nexport const SEARCH_TAB_PREFIX = '🔍';\nexport const NOTE_TAB_PREFIX = '📝';\n\nexport const DEFAULT_SEARCH_URL = 'https://google.com/search';\n\nexport const SITES_DATA_URL =\n  'https://gist.githubusercontent.com/chrisminch1/8f60236e8073b95d32f97c9f78c2222f/raw';\n\nexport const TASK_UPDATE_DELAY = 500; // ms\n\nexport type option<T> = T | null;\n\nexport type Sites = { [k: string]: { [k: string]: string } };\n\nexport type TaskLinks = gapi.client.Tasks.Schema.TaskLinks;\nexport type TaskList = gapi.client.Tasks.Schema.TaskList;\nexport type TaskLists = gapi.client.Tasks.Schema.TaskLists;\nexport type Tasks = gapi.client.Tasks.Schema.Tasks;\nexport type Task = gapi.client.Tasks.Schema.Task;\n","import { useEffect, useState } from 'react';\nimport { gapi } from 'gapi-script';\nimport { useCached, useLogin } from './utils';\n\nconst CLIENT_ID =\n  '529992368744-omh87l4imgosp83f9l67toav9rgl2bru.apps.googleusercontent.com';\nconst API_KEY = 'AIzaSyBZJJOMt3MkTKNiTgX8lRAkRx8Nd0A8lTc';\n\nconst TASKS_DISCOVERY_DOCS = [\n  'https://www.googleapis.com/discovery/v1/apis/tasks/v1/rest',\n];\nconst TASKS_SCOPE = 'https://www.googleapis.com/auth/tasks';\n\nlet called = false;\n\nfunction initClient(updateLoggedInStatus: (status: boolean) => void) {\n  if (called) return;\n  called = true;\n  gapi.client\n    .init({\n      apiKey: API_KEY,\n      clientId: CLIENT_ID,\n      discoveryDocs: TASKS_DISCOVERY_DOCS,\n      scope: TASKS_SCOPE,\n    })\n    .then(() => {\n      gapi.auth2.getAuthInstance().isSignedIn.listen(updateLoggedInStatus);\n\n      // initial sign in\n      updateLoggedInStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n    })\n    .catch((err) => {\n      console.error('Auth init error: ', err);\n    });\n}\n\nexport function useGoogleAPI() {\n  const { loggedIn, setLoggedIn } = useLogin();\n  const [clientInit, setClientInit] = useState(false);\n  const [offlineAccess, setOfflineAccess] = useCached('offlineaccess', false);\n\n  useEffect(() => {\n    if (!loggedIn)\n      gapi.load('client:auth2', () => {\n        initClient((status) => {\n          setLoggedIn(status);\n          setTimeout(() => {\n            if (status && !offlineAccess)\n              gapi.auth2\n                .getAuthInstance()\n                .currentUser.get()\n                .grantOfflineAccess({ scope: TASKS_SCOPE, prompt: 'consent' })\n                .then(({ code }) => {\n                  setOfflineAccess(true);\n                });\n          }, 5000);\n        });\n        setClientInit(true);\n      });\n  }, [loggedIn, setLoggedIn, offlineAccess, setOfflineAccess]);\n\n  const authInstance = clientInit\n    ? gapi.auth2.getAuthInstance()\n    : { signIn: () => {}, signOut: () => {} };\n\n  return {\n    loggedIn: loggedIn,\n    setLoggedIn: setLoggedIn,\n    logIn: authInstance.signIn,\n    logOut: authInstance.signOut,\n    username: loggedIn\n      ? gapi.auth2\n          .getAuthInstance()\n          .currentUser.get()\n          .getBasicProfile()\n          .getGivenName()\n      : null,\n  };\n}\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport DayPicker from 'react-day-picker';\nimport styled from 'styled-components';\nimport { useGoogleAPI } from './auth';\nimport {\n  DEFAULT_SEARCH_URL,\n  DEFAULT_TAB_TITLE,\n  NOTE_TAB_PREFIX,\n  option,\n  SEARCH_TAB_PREFIX,\n} from './config';\nimport { getValidURL, useAddTask } from './utils';\n\nconst SearchInput = styled.input`\n  margin: 0px 2px 2px 2px;\n  padding-left: 5px;\n  box-sizing: border-box;\n\n  border: none;\n  width: var(--lwidth);\n  height: 50px;\n\n  font-size: 40px;\n  background-color: var(--frg);\n  color: var(--txt);\n  font-family: Terminus, Montserrat;\n\n  &:focus {\n    outline: none;\n  }\n\n  @media screen and (max-width: 912px) {\n    & {\n      width: var(--mwidth);\n    }\n  }\n\n  @media screen and (max-width: 608px) {\n    & {\n      width: var(--swidth);\n    }\n  }\n`;\n\nconst SearchDatePicker = styled(DayPicker)<{ open: boolean }>`\n  display: ${(props) => (props.open ? 'default' : 'none')} !important;\n`;\n\nexport default function SearchBar({\n  text,\n  setText,\n  action,\n}: {\n  text: string;\n  setText: (s: string) => void;\n  action: option<string>;\n}) {\n  const input = useRef<HTMLInputElement>(null);\n  const [pickerOpen, setPickerOpen] = useState(false);\n  const [taskText, setTaskText] = useState<option<string>>(null);\n  const { addTask } = useAddTask();\n  const { loggedIn, logOut, logIn } = useGoogleAPI();\n\n  // useEffect(() => {\n  //   // Clikcing on anything except a link will focus the search bar\n  //   (document.querySelector('body') as HTMLBodyElement).onclick = (e) => {\n  //     if (input && input.current) input.current.focus();\n  //   };\n  // }, [input]);\n\n  const updateTitle = useCallback(\n    (start: string) => {\n      if (text.length) document.title = `${start} - ${text}`;\n      else document.title = DEFAULT_TAB_TITLE;\n    },\n    [text],\n  );\n\n  useEffect(() => {\n    updateTitle(SEARCH_TAB_PREFIX);\n  }, [text, updateTitle]);\n\n  useEffect(() => {\n    const blurCallback = updateTitle.bind(null, NOTE_TAB_PREFIX),\n      focusCallback = updateTitle.bind(null, SEARCH_TAB_PREFIX);\n\n    window.addEventListener('blur', blurCallback);\n    window.addEventListener('focus', focusCallback);\n\n    return () => {\n      window.removeEventListener('blur', blurCallback);\n      window.removeEventListener('focus', focusCallback);\n    };\n  }, [updateTitle]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') setPickerOpen(false);\n    });\n  });\n\n  return (\n    <>\n      <form\n        id={'action'}\n        onSubmit={(e) => {\n          e.preventDefault();\n\n          if (/^\\/t(ask)?/.test(text)) {\n            const matches = text.match(/[\\s].*/g);\n            setTaskText(matches !== null ? matches[0].trim() : null);\n            setPickerOpen(true);\n          } else if (/^\\/login/.test(text)) {\n            if (loggedIn) return;\n            logIn();\n            setText('');\n          } else if (/^\\/logout/.test(text)) {\n            if (!loggedIn) return;\n            logOut();\n            setText('');\n            window.localStorage.clear();\n          } else {\n            window.location.assign(\n              action !== null\n                ? getValidURL(action)\n                : `${DEFAULT_SEARCH_URL}?q=${encodeURIComponent(text)}`,\n            );\n          }\n        }}\n      >\n        <SearchInput\n          type=\"text\"\n          value={text}\n          ref={input}\n          autoFocus\n          autoComplete=\"off\"\n          onChange={(e) => setText(e.target.value)}\n        />\n      </form>\n      <SearchDatePicker\n        selectedDays={new Date()}\n        open={pickerOpen}\n        onDayClick={(d) => {\n          if (taskText !== null && d) {\n            addTask({ title: taskText, due: d.toISOString() });\n            setText('');\n          }\n          setPickerOpen(false);\n        }}\n      />\n    </>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport dayjs from 'dayjs';\n\nconst Wrapper = styled.div`\n  width: 180px;\n\n  margin-right: auto;\n\n  display: flex;\n`;\n\nconst DateSpan = styled.span`\n  align-self: flex-start;\n\n  color: var(--htx);\n`;\n\nconst TimeSpan = styled(DateSpan)`\n  margin-right: auto;\n\n  align-self: flex-end;\n`;\n\nexport default function Clock() {\n  const [date, setDate] = useState(new Date());\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <>\n      <Wrapper>\n        <TimeSpan id=\"clock\">{dayjs(date).format('HH:mm:ss')}</TimeSpan>\n        <DateSpan id=\"date\">{dayjs(date).format('ddd, MMM D')}</DateSpan>\n      </Wrapper>\n    </>\n  );\n}\n","import Clock from './Clock';\nimport styled from 'styled-components';\n\nconst StaticLinksContainer = styled.div`\n  margin: 2px 2px 0 2px;\n  box-sizing: border-box;\n\n  display: flex;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  align-items: center;\n\n  padding: 0 5px;\n  width: var(--lwidth);\n\n  background-color: var(--hdr);\n\n  color: var(--txt);\n  font-size: 16px;\n  line-height: 30px;\n\n  @media screen and (max-width: 912px) {\n    & {\n      width: var(--mwidth);\n      margin: 2px auto 0 auto;\n    }\n  }\n\n  @media screen and (max-width: 608px) {\n    & {\n      width: var(--swidth);\n    }\n  }\n`;\n\nconst StaticLink = styled.a`\n  color: var(--htx);\n  text-decoration: none;\n\n  &:hover {\n    color: var(--txt);\n  }\n\n  & + & {\n    margin-left: 15px;\n  }\n\n  @media screen and (max-width: 608px) {\n    &:first-of-type {\n      margin-left: 110px;\n    }\n  }\n`;\n\nexport default function StaticLinks() {\n  const links = ['Spotify'];\n\n  return (\n    <StaticLinksContainer id=\"static-links\">\n      <Clock />\n      {links.map((link, idx) => (\n        <StaticLink key={idx} href={link.toLowerCase() + ':'}>\n          {link}\n        </StaticLink>\n      ))}\n    </StaticLinksContainer>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useResizeDetector } from 'react-resize-detector';\nimport { option } from './config';\nimport LinkSections from './LinkSections';\nimport SearchBar from './SearchBar';\nimport StaticLinks from './StaticLinks';\nimport styled from 'styled-components';\nimport { useQueryString } from './utils';\n\nconst MainContainer = styled.div`\n  // transition: 0.2s height;\n\n  max-width: 912px;\n\n  user-select: none;\n  text-align: center;\n`;\n\nexport default function HomeSearch() {\n  const [query, setQuery] = useQueryString('q', '');\n  const [action, setAction] = useState<option<string>>(null);\n  const { height, ref } = useResizeDetector();\n\n  useEffect(() => {\n    if (\n      height !== undefined &&\n      height >\n        parseInt(\n          getComputedStyle(document.documentElement)\n            .getPropertyValue('--homesearch-height')\n            .slice(0, -2),\n        )\n    )\n      document.documentElement.style.setProperty(\n        '--homesearch-height',\n        `${height}px`,\n      );\n  }, [height]);\n\n  return (\n    <MainContainer id=\"main\" ref={ref}>\n      <StaticLinks />\n      <SearchBar text={query} setText={setQuery} action={action} />\n      <LinkSections query={query} setAction={setAction} />\n    </MainContainer>\n  );\n}\n","import styled from 'styled-components';\nimport { TaskList } from './config';\nimport { useState } from 'react';\nimport { partial } from './utils';\nimport { useGoogleAPI } from './auth';\n\nconst TasksBarDiv = styled.div`\n  padding: 5px;\n\n  height: 20px;\n\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n\n  background-color: var(--hdr);\n\n  color: var(--htx);\n`;\n\nconst TaskListChooserButton = styled.i.attrs({ className: 'fas fa-bars' })`\n  padding: 7px 12px 8px 5px;\n\n  font-size: 1.2em;\n  color: var(--frg-l);\n\n  &:hover {\n    color: var(--frg-ll);\n  }\n`;\n\nconst TasksBarText = styled.span`\n  margin: 0 auto 0 0;\n`;\n\nconst DropDown = styled.div<{ open: boolean }>`\n  max-height: ${(props) => (props.open ? `1000px` : '0')};\n  transition: max-height\n    ${(props) => (props.open ? '0.35s ease-in' : '0.25s ease-out')};\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n\n  overflow: auto;\n  scrollbar-width: thin;\n\n  background-color: var(--frg);\n  color: var(--txt);\n`;\n\nconst DropDownElement = styled.span`\n  padding: 5px;\n\n  &:hover {\n    background-color: var(--hdr);\n  }\n`;\n\nexport function TasksBar({\n  tasklists,\n  activeList,\n  setActiveList,\n}: {\n  tasklists: TaskList[];\n  activeList: TaskList;\n  setActiveList: (t: TaskList) => void;\n}) {\n  const [open, setOpen] = useState(false);\n  const { loggedIn } = useGoogleAPI();\n\n  return (\n    <>\n      <TasksBarDiv id=\"tasksbar\">\n        {loggedIn ? (\n          <TaskListChooserButton onClick={partial(setOpen, !open)} />\n        ) : (\n          <></>\n        )}\n        <TasksBarText>\n          {loggedIn && activeList.title ? `Tasks - ${activeList.title}` : 'Tasks - Not logged in'}\n        </TasksBarText>\n      </TasksBarDiv>\n      <DropDown open={open}>\n        {tasklists.map((list, idx) => (\n          <DropDownElement\n            key={idx}\n            onClick={() => {\n              setActiveList(list);\n              setOpen(false);\n            }}\n          >\n            {list.title}\n          </DropDownElement>\n        ))}\n      </DropDown>\n    </>\n  );\n}\n","import { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport dayjs from 'dayjs';\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport { Task } from './config';\nimport { Checkbox, TrashIcon } from './utils';\n\nconst TaskEntryDiv = styled.div`\n  margin: 0 5px 5px 5px;\n  padding: 0 0 10px 0;\n\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n\n  background-color: var(--hdr);\n\n  color: var(--txt);\n`;\n\nconst TaskDescInput = styled.textarea.attrs({ rows: 1 })<{ error: boolean }>`\n  margin: 5px;\n  padding: 0 5px;\n  box-sizing: border-box;\n  height: 1.5em;\n\n  border: 1px solid ${(props) => (props.error ? '#aa0000' : '#00000000')};\n\n  background-color: var(--frg);\n  color: var(--txt);\n  font-family: Terminus, Montserrat;\n\n  resize: none;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst TaskUIDiv = styled.div`\n  padding-top: 3px;\n\n  width: min-content;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DueDateDiv = styled.div`\n  margin-right: 0;\n\n  display: flex;\n  flex-direction: row;\n  align-content: flex-start;\n  align-items: center;\n`;\n\nconst DueIcon = styled.i.attrs({ className: 'fas fa-calendar-day' })`\n  margin: 5px 5px 5px 10px;\n  color: var(--frg-l);\n`;\n\nexport function TaskEntry({\n  task,\n  setTask,\n  setChecked,\n  setDeleted,\n}: {\n  task: Task;\n  setTask: (t: Partial<Task>) => void;\n  setChecked: () => void;\n  setDeleted: () => void;\n}) {\n  const descRef = useRef<HTMLTextAreaElement>(null);\n  const [taskDate, setTaskDate] = useState<Date | undefined>(undefined);\n\n  function updateDescHeight() {\n    if (descRef.current) {\n      descRef.current.style.height = '';\n      descRef.current.style.height = `${descRef.current.scrollHeight + 3}px`;\n    }\n  }\n\n  useEffect(updateDescHeight, [descRef]);\n\n  useEffect(() => {\n    if (task.due) {\n      const d = new Date(task.due.split('T')[0]);\n      setTaskDate(\n        new Date(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate()),\n      );\n    } else setTaskDate(undefined);\n  }, [task.due]);\n\n  useEffect(() => {\n    updateDescHeight();\n  }, [task.title]);\n\n  return (\n    <TaskEntryDiv className=\"taskentry\">\n      <Checkbox checked={task.status === 'completed'} onClick={setChecked} />\n      <TaskUIDiv>\n        <TaskDescInput\n          ref={descRef}\n          value={task.title}\n          error={task.title === ''}\n          placeholder=\"Description can't be empty\"\n          onChange={(e) =>\n            setTask({ title: e.target.value.replace(/\\n/g, '') })\n          }\n        />\n        <DueDateDiv>\n          <DueIcon />\n          <DayPickerInput\n            placeholder=\"No due date\"\n            parseDate={(str, format, locale) => {\n              const d = dayjs(str, format, locale);\n              return d.isValid() ? d.toDate() : undefined;\n            }}\n            formatDate={(date, format, locale) =>\n              dayjs(date, undefined, locale).format(format)\n            }\n            format={'dddd, MMM D'}\n            dayPickerProps={{\n              onDayClick: (d) => setTask({ due: d.toISOString() }),\n            }}\n            inputProps={{\n              onChange: (e: any) => {\n                try {\n                  const d = new Date(e.target.value);\n                  setTask({\n                    due: new Date(\n                      d.getUTCFullYear(),\n                      d.getUTCMonth(),\n                      d.getUTCDate(),\n                    ).toISOString(),\n                  });\n                } catch (err) {\n                  if (e.target.value === '') setTask({ due: '' });\n                }\n              },\n            }}\n            value={taskDate}\n          />\n        </DueDateDiv>\n      </TaskUIDiv>\n      <TrashIcon onClick={setDeleted} />\n    </TaskEntryDiv>\n  );\n}\n","import { ReactElement, useCallback, useEffect, useState } from 'react';\nimport update from 'immutability-helper';\nimport styled from 'styled-components';\nimport { TaskEntry } from './TaskEntry';\nimport { Task, TaskList, TASK_UPDATE_DELAY } from './config';\nimport { partial, useAddTask } from './utils';\nimport { useGoogleAPI } from './auth';\n\nconst CompletedTasksDiv = styled.div`\n  padding: 5px;\n  margin: 0 5px 5px 5px;\n\n  color: var(--htx);\n\n  &:hover {\n    color: var(--txt);\n    hr {\n      background-color: var(--txt);\n    }\n  }\n`;\n\nconst StyledHR = styled.hr`\n  height: 1px;\n\n  border-width: 0;\n\n  background-color: var(--htx);\n`;\n\ntype ChevronIconProps = {\n  expanded: boolean;\n};\n\nconst ChevronIcon = styled.i.attrs<ChevronIconProps>(({ expanded }) => ({\n  className: `fas fa-chevron-${expanded ? 'down' : 'right'}`,\n}))<ChevronIconProps>`\n  &.fa-chevron-right {\n    margin-right: 7px;\n  }\n\n  &.fa-chevron-down {\n    margin-right: 3px;\n  }\n`;\n\nfunction CompletedTasks({\n  tasks,\n  setTask,\n  setChecked,\n  setDeleted,\n}: {\n  tasks: Task[];\n  setTask: (taskId: string, idx: number, t: Partial<Task>) => void;\n  setChecked: (taskId: string, idx: number) => void;\n  setDeleted: (taskId: string, idx: number) => void;\n}) {\n  const [expanded, setExpanded] = useState(false);\n\n  return (\n    <>\n      <CompletedTasksDiv\n        id=\"completedtasks\"\n        onClick={partial(setExpanded, !expanded)}\n      >\n        <StyledHR />\n        <ChevronIcon expanded={expanded} />\n        <span>Completed tasks</span>\n      </CompletedTasksDiv>\n      {expanded\n        ? tasks.map((task, idx) => (\n            <TaskEntry\n              key={idx}\n              task={task}\n              setTask={partial(setTask, task.id as string, idx)}\n              setChecked={partial(setChecked, task.id as string, idx)}\n              setDeleted={partial(setDeleted, task.id as string, idx)}\n            />\n          ))\n        : ''}\n    </>\n  );\n}\n\nconst TasksListDiv = styled.div`\n  height: 100%;\n  width: 100%;\n  padding-top: 5px;\n\n  overflow: hidden scroll;\n  scrollbar-width: thin;\n\n  background-color: var(--frg);\n\n  color: var(--htx);\n  text-align: center;\n`;\n\nconst NoTasksText = styled.p`\n  margin: 20px 80px;\n`;\n\nexport function TasksList({\n  tasks,\n  setTasks,\n  completed: doneTasks,\n  setCompleted: setDoneTasks,\n  activeTaskList,\n}: {\n  tasks: Task[];\n  setTasks: (t: Task[]) => void;\n  completed: Task[];\n  setCompleted: (t: Task[]) => void;\n  activeTaskList: TaskList;\n}) {\n  const { setAddTask } = useAddTask();\n  const { loggedIn, username } = useGoogleAPI();\n\n  const addTask = useCallback(\n    (task: Task) => {\n      try {\n        gapi.client.tasks.tasks\n          ?.insert({ resource: task, tasklist: activeTaskList.id as string })\n          .then((data) => {\n            if (data.statusText !== 'OK') throw Error('failed to add task');\n            setTasks(update(tasks, { $push: [data.result] }));\n          })\n          .catch((err) => console.error(err));\n      } catch (err) {\n        console.error(err);\n      }\n    },\n    [tasks, setTasks, activeTaskList.id],\n  );\n\n  useEffect(() => {\n    setAddTask(addTask);\n  }, [addTask, setAddTask]);\n\n  const [updateTimers, setUpdateTimers] = useState<{ [k: string]: number }>({});\n\n  function updateTask(\n    list: Task[],\n    setList: (t: Task[]) => void,\n    listId: string,\n    taskId: string,\n    idx: number,\n    task: Partial<Task>,\n  ) {\n    // update local tasks list\n    const updated = update(list, {\n      [idx]: { $merge: task },\n    });\n    setList(updated);\n\n    // check if timer for this task id is already in updateTimers\n    const oldTaskTimer = updateTimers[taskId];\n    if (oldTaskTimer !== undefined)\n      // if it is, cancel it\n      clearTimeout(oldTaskTimer);\n\n    if (task.title === '') return;\n\n    // schedule a new update\n    const newTaskTimer = window.setTimeout(() => {\n      gapi.client.tasks.tasks\n        ?.patch({ resource: task, tasklist: listId, task: taskId })\n        .then((data) => {\n          if (data.statusText !== 'OK')\n            throw Error(`failed to update task ${listId} : ${taskId}`);\n          // clear this task's timer\n          setUpdateTimers(update(updateTimers, { $unset: [taskId] }));\n        })\n        .catch((err) => console.error(err));\n    }, TASK_UPDATE_DELAY);\n\n    setUpdateTimers(\n      update(updateTimers, { $merge: { [taskId]: newTaskTimer } }),\n    );\n  }\n\n  function deleteTask(\n    list: Task[],\n    setList: (t: Task[]) => void,\n    listId: string,\n    taskId: string,\n    idx: number,\n  ) {\n    // delete the task\n    try {\n      gapi.client.tasks.tasks\n        ?.delete({ tasklist: listId, task: taskId })\n        .then((data) => {\n          if (data.status !== 204)\n            throw Error(`failed to delete task ${listId} : ${taskId}`);\n\n          // update local copy\n          setList(update(list, { $splice: [[idx, 1]] }));\n        })\n        .catch((err) => console.error(err));\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  function toggleCompleted(\n    src: Task[],\n    setSrc: (t: Task[]) => void,\n    dest: Task[],\n    setDest: (t: Task[]) => void,\n    listId: string,\n    taskId: string,\n    idx: number,\n  ) {\n    // assemble updated task\n    const oldTask = src[idx];\n    const query = {\n      status: oldTask.status === 'completed' ? 'needsAction' : 'completed',\n    };\n\n    // send update\n    gapi.client.tasks.tasks\n      ?.patch({ resource: query, tasklist: listId, task: taskId })\n      .then((data) => {\n        if (data.statusText !== 'OK')\n          throw Error(`failed to toggle task completed ${listId} : ${taskId}`);\n\n        // remove from src list\n        const newSrc = update(src, { $splice: [[idx, 1]] });\n        setSrc(newSrc);\n\n        // add to dest list\n        const newDest = update(dest, {\n          $push: [\n            update(\n              // update status, remove completed field if necessary\n              oldTask,\n              oldTask.status === 'completed'\n                ? { $unset: ['completed'], $merge: { status: 'needsAction' } }\n                : { $merge: { status: 'completed' } },\n            ),\n          ],\n        });\n        setDest(newDest);\n      });\n  }\n\n  let body: ReactElement;\n  if (loggedIn) {\n    body = (\n      <>\n        {tasks.length ? (\n          tasks.map((task, idx) => (\n            <TaskEntry\n              key={idx}\n              task={task}\n              setTask={partial(\n                updateTask,\n                tasks,\n                setTasks,\n                activeTaskList.id as string,\n                task.id as string,\n                idx,\n              )}\n              setChecked={partial(\n                toggleCompleted,\n                tasks,\n                setTasks,\n                doneTasks,\n                setDoneTasks,\n                activeTaskList.id as string,\n                task.id as string,\n                idx,\n              )}\n              setDeleted={partial(\n                deleteTask,\n                tasks,\n                setTasks,\n                activeTaskList.id as string,\n                task.id as string,\n                idx,\n              )}\n            />\n          ))\n        ) : (\n          <NoTasksText>\n            Looks like you have some free time, {username} :)\n          </NoTasksText>\n        )}\n        <CompletedTasks\n          tasks={doneTasks}\n          setTask={partial(\n            updateTask,\n            doneTasks,\n            setDoneTasks,\n            activeTaskList.id as string,\n          )}\n          setChecked={partial(\n            toggleCompleted,\n            doneTasks,\n            setDoneTasks,\n            tasks,\n            setTasks,\n            activeTaskList.id as string,\n          )}\n          setDeleted={partial(\n            deleteTask,\n            doneTasks,\n            setDoneTasks,\n            activeTaskList.id as string,\n          )}\n        />\n      </>\n    );\n  } else {\n    body = <NoTasksText>Use /login to log into Tasks</NoTasksText>;\n  }\n\n  return <TasksListDiv id=\"taskslist\">{body}</TasksListDiv>;\n}\n","import { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { gapi } from 'gapi-script';\nimport { useGoogleAPI } from './auth';\nimport { Task, TaskList } from './config';\nimport { useCached } from './utils';\nimport { TasksBar } from './TasksBar';\nimport { TasksList } from './TasksList';\n\nconst TasksMainDiv = styled.div`\n  height: var(--homesearch-height);\n\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (max-width: 608px) {\n    & {\n      height: min-content;\n      margin: 60px 0;\n    }\n  }\n`;\n\nexport default function HomeTasks() {\n  const [tasklists, setTaskLists] = useCached<TaskList[]>('tasklists', []);\n  const [activeList, setActiveList] = useCached<TaskList>('activelist', {});\n\n  const [tasks, setTasks] = useCached<Task[]>('tasks', []);\n  const [completed, setCompleted] = useCached<Task[]>('completed', []);\n  const { loggedIn } = useGoogleAPI();\n\n  useEffect(() => {\n    setTasks(\n      tasks.sort((a, b) => {\n        // sort by date, then by position\n        if (a.due && b.due)\n          return new Date(a.due).getTime() - new Date(b.due).getTime();\n        else if (a.position && b.position)\n          return a.position.localeCompare(b.position);\n\n        return 0;\n      }),\n    );\n  }, [tasks, setTasks]);\n\n  useEffect(() => {\n    if (loggedIn)\n      try {\n        gapi.client.tasks.tasklists\n          ?.list()\n          .then((data) => {\n            if (data.statusText !== 'OK')\n              throw Error('failed to get tasklists');\n            if (data.result.items) {\n              setTaskLists(data.result.items);\n              if (activeList.title === undefined)\n                setActiveList(data.result.items[0]);\n            }\n          })\n          .catch((err) => {\n            console.error(err);\n          });\n      } catch (err) {\n        console.error(err);\n      }\n  }, [loggedIn, setTaskLists, setActiveList, activeList.title]);\n\n  useEffect(() => {\n    if (loggedIn && activeList.id)\n      try {\n        gapi.client.tasks.tasks\n          ?.list({\n            tasklist: activeList.id,\n            showCompleted: true,\n            maxResults: 100,\n          })\n          .then((data) => {\n            if (data.statusText !== 'OK')\n              throw Error(`failed to get tasks for list ${activeList.title}`);\n\n            const list = data.result.items || [];\n            setTasks(list.filter((elt) => elt.completed === undefined));\n            setCompleted(list.filter((elt) => elt.completed));\n          })\n          .catch((err) => console.error(err));\n      } catch (err) {\n        console.error(err);\n      }\n  }, [loggedIn, setTasks, setCompleted, activeList.id, activeList.title]);\n\n  return (\n    <TasksMainDiv id=\"tasksmain\">\n      <TasksBar\n        tasklists={tasklists}\n        activeList={activeList}\n        setActiveList={setActiveList}\n      />\n      <TasksList\n        tasks={tasks}\n        setTasks={setTasks}\n        completed={completed}\n        setCompleted={setCompleted}\n        activeTaskList={activeList}\n      />\n    </TasksMainDiv>\n  );\n}\n","import { useEffect } from 'react';\nimport HomeSearch from './HomeSearch';\nimport HomeTasks from './HomeTasks';\nimport { PAGE_HUE_MAX, PAGE_HUE_MIN } from './config';\n\nexport default function App() {\n  useEffect(() => {\n    function random(min: number, max: number) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    // Choose a random page color base on page load\n    document.documentElement.style.setProperty(\n      '--base',\n      `${random(PAGE_HUE_MIN, PAGE_HUE_MAX)}`,\n    );\n  }, []);\n\n  return (\n    <>\n      <HomeSearch />\n      <HomeTasks />\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style.css';\nimport './daypicker.css';\nimport { unregister } from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nunregister();\n"],"sourceRoot":""}